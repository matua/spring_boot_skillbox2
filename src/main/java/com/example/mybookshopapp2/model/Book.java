package com.example.mybookshopapp2.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;

import javax.persistence.*;
import java.sql.Date;
import java.util.HashSet;
import java.util.Set;

@Entity
@Table(name = "books")
@ApiModel(description = "entitiy representing a book")
@Data
public class Book {
    @ManyToMany(cascade = CascadeType.ALL)
    @JoinTable(name = "book2user",
            joinColumns = @JoinColumn(name = "book_id"),
            inverseJoinColumns = @JoinColumn(name = "user_id")
    )
    Set<User> users = new HashSet<>();
    //    @ManyToOne
////    @JoinColumn(name = "author_id", referencedColumnName = "id")
//    @JoinTable(name = "book2author",
//            joinColumns = @JoinColumn(name = "book_id"),
//            inverseJoinColumns = @JoinColumn(name = "author_id"))
    @ManyToMany(cascade = CascadeType.ALL/*, fetch = FetchType.EAGER*/)
    @JoinTable(name = "book2author",
            joinColumns = @JoinColumn(name = "book_id"),
            inverseJoinColumns = @JoinColumn(name = "author_id")
    )
    @JsonIgnore
    Set<Author> authors = new HashSet<>();
    @ManyToMany(cascade = CascadeType.ALL)
    @JoinTable(name = "book2genre",
            joinColumns = @JoinColumn(name = "book_id"),
            inverseJoinColumns = @JoinColumn(name = "genre_id")
    )
    @JsonIgnore
    Set<Author> genres = new HashSet<>();
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty("id generated by db automatically")
    private Integer id;
    @ApiModelProperty("date of book publication")
    private Date pubDate;
    @ApiModelProperty("if isBestseller = 1, the book is considered a bestseller")
    private Byte isBestseller;
    @ApiModelProperty("mnemonical identity sequence of characters")
    private String slug;
    @ApiModelProperty("image url")
    private String image;
    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("book description text")
    private String description;
    //    private Author author;
    @ApiModelProperty("book title")
    private String title;
    @Column(name = "price")
    @JsonProperty("price")
    @ApiModelProperty("book price without discount")
    private Integer priceOld;
    @Column(name = "discount")
    @JsonProperty("discount")
    @ApiModelProperty("discount value for book")
    private Double price;
    private Byte rating;
}
